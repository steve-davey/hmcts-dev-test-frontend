{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/tabs/macro.njk" import govukTabs %}
{% from "govuk/components/table/macro.njk" import govukTable %}
{% from "govuk/components/tag/macro.njk" import govukTag %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "govuk/components/notification-banner/macro.njk" import govukNotificationBanner %}

{% extends "template.njk" %}

{% block content %}
  <h1 class="govuk-heading-xl">Case Management System</h1>

  <div id="message-container"></div>

  {{ govukTabs({
    items: [
      {
        label: "All Cases",
        id: "all-cases",
        panel: {
          html: '
            <div class="govuk-grid-row">
              <div class="govuk-grid-column-full">
                <h2 class="govuk-heading-l">All Cases</h2>
                <div id="cases-container">
                  <div class="govuk-body">Loading cases...</div>
                </div>
              </div>
            </div>
          '
        }
      },
      {
        label: "Create Case",
        id: "create-case",
        panel: {
          html: '
            <div class="govuk-grid-row">
              <div class="govuk-grid-column-two-thirds">
                <h2 class="govuk-heading-l" id="form-heading">Create New Case</h2>
                <form id="case-form">
                  <input type="hidden" id="editing-id" value="">
                  ' + govukInput({
                    label: {
                      text: "Case Number"
                    },
                    id: "case-number",
                    name: "case-number",
                    attributes: {
                      required: true
                    }
                  }) + '
                  ' + govukInput({
                    label: {
                      text: "Title"
                    },
                    id: "title",
                    name: "title",
                    attributes: {
                      required: true
                    }
                  }) + '
                  ' + govukTextarea({
                    name: "description",
                    id: "description",
                    label: {
                      text: "Description"
                    },
                    rows: 4
                  }) + '
                  ' + govukSelect({
                    id: "status",
                    name: "status",
                    label: {
                      text: "Status"
                    },
                    items: [
                      {
                        value: "OPEN",
                        text: "Open"
                      },
                      {
                        value: "IN_PROGRESS", 
                        text: "In Progress"
                      },
                      {
                        value: "CLOSED",
                        text: "Closed"
                      },
                      {
                        value: "CANCELLED",
                        text: "Cancelled"
                      }
                    ]
                  }) + '
                  <div class="govuk-button-group">
                    ' + govukButton({
                      text: "Create Case",
                      type: "submit",
                      id: "submit-btn"
                    }) + '
                    ' + govukButton({
                      text: "Cancel",
                      classes: "govuk-button--secondary",
                      id: "cancel-btn",
                      attributes: {
                        style: "display: none;"
                      }
                    }) + '
                  </div>
                </form>
              </div>
            </div>
          '
        }
      }
    ]
  }) }}

  {% if example.id %}
    <div class="govuk-!-margin-top-8">
      <h2 class="govuk-heading-l">Example Case (from backend)</h2>
      {{ govukSummaryList({
        rows: [
          {
            key: {
              text: "ID"
            },
            value: {
              text: example.id
            }
          },
          {
            key: {
              text: "Case Number"
            },
            value: {
              text: example.caseNumber
            }
          },
          {
            key: {
              text: "Title"
            },
            value: {
              html: example.title
            }
          },
          {
            key: {
              text: "Description"
            },
            value: {
              html: example.description
            }
          },
          {
            key: {
              text: "Status"
            },
            value: {
              html: example.status
            }
          },
          {
            key: {
             text: "Created Date"
            },
            value: {
             html: example.createdDate
            }
          }
        ]
      }) }}
    </div>
  {% endif %}

  <script>
    // Initialize when page loads
    document.addEventListener('DOMContentLoaded', function() {
      loadAllCases();
      initializeEventListeners();
    });

    function initializeEventListeners() {
      // Form submission
      document.getElementById('case-form').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const editingId = document.getElementById('editing-id').value;
        
        if (editingId) {
          updateCase(editingId);
        } else {
          createCase();
        }
      });

      // Cancel button
      document.getElementById('cancel-btn').addEventListener('click', function(e) {
        e.preventDefault();
        resetForm();
      });
    }

    function createCase() {
  console.log('createCase function called');
  
  const caseData = {
    caseNumber: document.getElementById('case-number').value,
    title: document.getElementById('title').value,
    description: document.getElementById('description').value,
    status: document.getElementById('status').value
  };

  console.log('Case data to be sent:', caseData);

  // Validate required fields
  if (!caseData.caseNumber || !caseData.title) {
    showMessage('Case Number and Title are required!', 'error');
    return;
  }

  console.log('Making POST request to /api/cases');

  fetch('/api/cases', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(caseData)
  })
  .then(response => {
    console.log('Response status:', response.status);
    console.log('Response headers:', response.headers);
    
    if (!response.ok) {
      return response.text().then(text => {
        console.error('Error response body:', text);
        throw new Error(`Failed to create case: ${response.status} - ${text}`);
      });
    }
    return response.json();
  })
  .then(data => {
    console.log('Case created successfully:', data);
    showMessage('Case created successfully!', 'success');
    resetForm();
    loadAllCases();
    // Switch back to all cases tab
    const allCasesTab = document.querySelector('[href="#all-cases"]');
    if (allCasesTab) {
      allCasesTab.click();
    }
  })
  .catch(error => {
    console.error('Error creating case:', error);
    showMessage('Error creating case: ' + error.message, 'error');
  });
}

    function loadAllCases() {
      const container = document.getElementById('cases-container');
      container.innerHTML = '<div class="govuk-body">Loading cases...</div>';

      fetch('/api/cases')
      .then(response => {
        if (!response.ok) throw new Error('Failed to load cases');
        return response.json();
      })
      .then(data => {
        displayCases(data.content || []);
      })
      .catch(error => {
        container.innerHTML = '<div class="govuk-error-message">Error loading cases: ' + error.message + '</div>';
      });
    }

    function displayCases(cases) {
      const container = document.getElementById('cases-container');
      
      if (cases.length === 0) {
        container.innerHTML = '<p class="govuk-body">No cases found. Create one using the "Create Case" tab!</p>';
        return;
      }

      // Create table data
      const tableRows = cases.map(caseItem => [
        { text: caseItem.caseNumber },
        { text: caseItem.title },
        { text: caseItem.description || 'No description' },
        { html: getStatusTag(caseItem.status) },
        { text: new Date(caseItem.createdDate).toLocaleDateString() },
        { 
          html: `
            <button class="govuk-button govuk-button--secondary govuk-!-margin-right-2" onclick="editCase(${caseItem.id})">Edit</button>
            <button class="govuk-button govuk-button--warning" onclick="deleteCase(${caseItem.id})">Delete</button>
          `
        }
      ]);

      const tableHtml = `
        <table class="govuk-table">
          <thead class="govuk-table__head">
            <tr class="govuk-table__row">
              <th scope="col" class="govuk-table__header">Case Number</th>
              <th scope="col" class="govuk-table__header">Title</th>
              <th scope="col" class="govuk-table__header">Description</th>
              <th scope="col" class="govuk-table__header">Status</th>
              <th scope="col" class="govuk-table__header">Created Date</th>
              <th scope="col" class="govuk-table__header">Actions</th>
            </tr>
          </thead>
          <tbody class="govuk-table__body">
            ${tableRows.map(row => `
              <tr class="govuk-table__row">
                ${row.map(cell => `<td class="govuk-table__cell">${cell.html || cell.text}</td>`).join('')}
              </tr>
            `).join('')}
          </tbody>
        </table>
      `;

      container.innerHTML = tableHtml;
    }

    function getStatusTag(status) {
      const statusConfig = {
        'OPEN': { text: 'Open', colour: 'blue' },
        'IN_PROGRESS': { text: 'In Progress', colour: 'yellow' },
        'CLOSED': { text: 'Closed', colour: 'green' },
        'CANCELLED': { text: 'Cancelled', colour: 'red' }
      };
      
      const config = statusConfig[status] || { text: status, colour: 'grey' };
      return `<strong class="govuk-tag govuk-tag--${config.colour}">${config.text}</strong>`;
    }

    function editCase(id) {
      fetch(`/api/cases/${id}`)
      .then(response => {
        if (!response.ok) throw new Error('Failed to load case');
        return response.json();
      })
      .then(caseData => {
        document.getElementById('editing-id').value = caseData.id;
        document.getElementById('case-number').value = caseData.caseNumber;
        document.getElementById('title').value = caseData.title;
        document.getElementById('description').value = caseData.description || '';
        document.getElementById('status').value = caseData.status;
        
        document.getElementById('form-heading').textContent = 'Edit Case';
        document.getElementById('submit-btn').textContent = 'Update Case';
        document.getElementById('cancel-btn').style.display = 'inline-block';
        
        // Switch to create case tab (which becomes edit mode)
        const createTab = document.querySelector('[href="#create-case"]');
        if (createTab) {
          createTab.click();
        }
      })
      .catch(error => {
        showMessage('Error loading case: ' + error.message, 'error');
      });
    }

    function updateCase(id) {
      const caseData = {
        caseNumber: document.getElementById('case-number').value,
        title: document.getElementById('title').value,
        description: document.getElementById('description').value,
        status: document.getElementById('status').value
      };

      fetch(`/api/cases/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(caseData)
      })
      .then(response => {
        if (!response.ok) throw new Error('Failed to update case');
        return response.json();
      })
      .then(data => {
        showMessage('Case updated successfully!', 'success');
        resetForm();
        loadAllCases();
        // Switch back to all cases tab
        const allCasesTab = document.querySelector('[href="#all-cases"]');
        if (allCasesTab) {
          allCasesTab.click();
        }
      })
      .catch(error => {
        showMessage('Error updating case: ' + error.message, 'error');
      });
    }

    function deleteCase(id) {
      if (!confirm('Are you sure you want to delete this case?')) {
        return;
      }

      fetch(`/api/cases/${id}`, {
        method: 'DELETE'
      })
      .then(response => {
        if (!response.ok) throw new Error('Failed to delete case');
        showMessage('Case deleted successfully!', 'success');
        loadAllCases();
      })
      .catch(error => {
        showMessage('Error deleting case: ' + error.message, 'error');
      });
    }

    function resetForm() {
      document.getElementById('case-form').reset();
      document.getElementById('editing-id').value = '';
      document.getElementById('form-heading').textContent = 'Create New Case';
      document.getElementById('submit-btn').textContent = 'Create Case';
      document.getElementById('cancel-btn').style.display = 'none';
    }

    function showMessage(message, type) {
      const container = document.getElementById('message-container');
      
      const bannerClass = type === 'success' ? 'govuk-notification-banner--success' : '';
      const titleText = type === 'success' ? 'Success' : 'Error';
      
      container.innerHTML = `
        <div class="govuk-notification-banner ${bannerClass}" role="alert" aria-labelledby="govuk-notification-banner-title" data-module="govuk-notification-banner">
          <div class="govuk-notification-banner__header">
            <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">${titleText}</h2>
          </div>
          <div class="govuk-notification-banner__content">
            <p class="govuk-notification-banner__heading">${message}</p>
          </div>
        </div>
      `;
      
      // Auto-hide after 5 seconds
      setTimeout(() => {
        container.innerHTML = '';
      }, 5000);
    }
  </script>
{% endblock %}